struct test {
a : i32
}
fn fn_test ( a : test , b : Vec ) -> i32 {
let mut c = blabla ;
let x = idf_fun(a,b) ;
let x = fun_veracite();
}

struct test {
a : i32
}
fn fn_test ( a : test , b : Vec ) -> i32 {
let affstr = a{} ;
let affstr2 = k{j : 2, l : 3} ;
}

struct test {
a : i32
}
fn fn_test ( a : test , b : Vec ) -> i32 {
if i == 5 {
  let a = 2 ;
}
if i == 25 {
  let b = -9 ;
}else{
  let mut a = 2 ;
}
if i == 25 {
  let b = -9 ;
}else if i < 4 {
  let mut a = 1;
}
}

struct test {
a : i32
}
fn fn_test ( a : test , b : Vec ) -> i32 {
let l = vec ![d1 , d2 , d3 , d4 ];
print ! ( candy ) ;
}

struct test {
a : i32
}
fn fn_test ( a : test , b : Vec ) -> i32 {
let l =  fn_test (w, t);
fn_test_imaginary( fn_test(a,k) ) ;
}

struct test {
a : i32
}
fn fn_test ( a : test , b : Vec ) -> i32 {
let mut l1 =  fn_test (w, t)[a*3][fn_test2()].elt.len();
let mut l2 =  fn_test (w, t)[a*3][fn_test2(test_veracite)].elt.len();
let x = fun_veracite();
}